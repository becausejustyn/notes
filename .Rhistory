library(tidyverse)
load_pbp <- function(season = c(2021)) {
pbp <- readr::read_rds(
glue::glue("~/Documents/nfl/data/pbp/play_by_play_{x}.rds")
)
}
pbp <- load_pbp()
load_pbp <- function(season = c(2021)) {
pbp <- readr::read_rds(
glue::glue("~/Documents/nfl/data/pbp/play_by_play_{season}.rds")
)
}
pbp <- load_pbp()
library(ggplot2)
library(ggrepel)
library(ggimage)
library(nflfastR)
library(scales)
library(dplyr)
library(cowplot)
fourth_down <- pbp %>%
filter(
down == 4,
season_type == "REG"
) %>%
select(
posteam, ydstogo, yardline_100,
fixed_drive_result, fixed_drive,
fourth_down_converted, play_type,
season, special_teams_play, qtr,
game_seconds_remaining, score_differential)
fourth_down <- pbp %>%
filter(
down == 4,
season_type == "REG"
) %>%
select(
posteam, ydstogo, yardline_100,
fixed_drive_result, fixed_drive,
fourth_down_converted, play_type,
season, special_teams_play, qtr,
game_seconds_remaining, score_differential) %>%
mutate(posteam = as_factor(posteam))
summary(fourth_down)
summary(fourth_down) %>% View
styler:::style_selection()
?summarise
ydstogo_tot <- fourth_down %>%
select(ydstogo) %>%
group_by(ydstogo) %>%
summarise(
n = length(ydstogo),
.groups = "keep"
)
ydstogo_tot
styler:::style_selection()
max(fourth_down$ydstogo)
fourth_down[['ydstogo']] %>% max()
seq(1, fourth_down[['ydstogo']], 1)
seq(1, fourth_down[['ydstogo']] %>% max, 1)
fourth_down %>%
ggplot(aes(
x = ydstogo
)) +
#pull(fourth_down, ydstogo) %>% max()
geom_histogram(bins = fourth_down[['ydstogo']] %>% max(), color = "black", fill = "steelblue2") +
labs(
title = "Histogram of Yards to Go on 4th Down, 2021 Regular Season",
x = "Yards To Go",
y = "Number of Instances"
) +
theme_light() +
theme(plot.title = element_text(hjust = .5)) +
scale_x_continuous(breaks = seq(1, fourth_down[['ydstogo']] %>% max, 1)) + #, labels = xbreaks
geom_label_repel(
inherit.aes = FALSE,
data = ydstogo_tot,
aes(x = ydstogo, y = n, label = ifelse(n == max(n), n, "")),
box.padding = 2,
point.padding = 2,
nudge_x = 1.5,
size = 4,
color = "Grey50",
segment.color = "black"
) +
annotate("rect", xmin = 40, xmax = 43, ymin = -10, ymax = 40, alpha = 0.2) +
annotate("text", x = 38, y = 120, label = paste(sum(ydstogo_tot[ydstogo_tot$ydstogo > 39, "n"]), "plays at more\nthan 40 yards to go"))
fourth_down %>%
ggplot(aes(
x = ydstogo
)) +
#pull(fourth_down, ydstogo) %>% max()
geom_histogram(bins = fourth_down[['ydstogo']] %>% max(), color = "black", fill = "steelblue2") +
labs(
title = "Histogram of Yards to Go on 4th Down, 2021 Regular Season",
x = "Yards To Go",
y = "Number of Instances"
) +
theme_light() +
theme(plot.title = element_text(hjust = .5)) +
scale_x_continuous(breaks = seq(1, fourth_down[['ydstogo']] %>% max, 1))
conv_attempt <- fourth_down %>%
filter(play_type %in% c("run", "pass")) %>%
select(ydstogo)
conv_ydstogo_tot <- conv_attempt %>%
select(ydstogo) %>%
group_by(ydstogo) %>%
summarise(
n = length(ydstogo),
.groups = 'keep'
)
styler:::style_selection()
conv_attempt %>%
ggplot(aes(
x = ydstogo
)) +
geom_histogram(bins = conv_attempt[['ydstogo']] %>% max(), color = "black", fill = "steelblue2") +
labs(
title = "Histogram of Yards to Go on 4th Down, Conversion Attempts",
x = "Yards To Go",
y = "Number of Instances"
) +
theme_light() +
theme(plot.title = element_text(hjust = .5)) +
scale_x_continuous(
breaks = seq(1, conv_attempt[['ydstogo']] %>% max, 1)
)
all_hist <- fourth_down %>%
ggplot(aes(
x = ydstogo
)) +
#pull(fourth_down, ydstogo) %>% max()
geom_histogram(bins = fourth_down[['ydstogo']] %>% max(), color = "black", fill = "steelblue2") +
labs(
title = "Histogram of Yards to Go on 4th Down, 2021 Regular Season",
x = "Yards To Go",
y = "Number of Instances"
) +
theme_light() +
theme(plot.title = element_text(hjust = .5)) +
scale_x_continuous(breaks = seq(1, fourth_down[['ydstogo']] %>% max, 1)) + #, labels = xbreaks
geom_label_repel(
inherit.aes = FALSE,
data = ydstogo_tot,
aes(x = ydstogo, y = n, label = ifelse(n == max(n), n, "")),
box.padding = 2,
point.padding = 2,
nudge_x = 1.5,
size = 4,
color = "Grey50",
segment.color = "black"
) +
annotate("rect", xmin = 40, xmax = 43, ymin = -10, ymax = 40, alpha = 0.2) +
annotate("text", x = 38, y = 120, label = paste(sum(ydstogo_tot[ydstogo_tot$ydstogo > 39, "n"]), "plays at more\nthan 40 yards to go"))
conv_hist <- conv_attempt %>%
ggplot(aes(
x = ydstogo
)) +
geom_histogram(bins = conv_attempt[['ydstogo']] %>% max(), color = "black", fill = "steelblue2") +
labs(
title = "Histogram of Yards to Go on 4th Down, Conversion Attempts",
x = "Yards To Go",
y = "Number of Instances"
) +
theme_light() +
theme(plot.title = element_text(hjust = .5)) +
scale_x_continuous(
breaks = seq(1, conv_attempt[['ydstogo']] %>% max, 1)
) + #, labels = conv_xbreaks
geom_label_repel(
inherit.aes = FALSE,
data = conv_ydstogo_tot,
aes(x = ydstogo, y = n, label = ifelse(n == max(n), n, "")),
box.padding = 2,
point.padding = 2,
nudge_x = 1,
size = 4,
color = "Grey50",
segment.color = "black"
)
plot_grid(all_hist, conv_hist, nrow=2)
library(hexbin)
game_results <- pbp %>%
group_by(game_id) %>%
filter(str_detect(desc, "END GAME") == TRUE) %>%
select(home_team, away_team, home_score, away_score)
pbp
game_results
game_results <- pbp %>%
group_by(game_id) %>%
filter(str_detect(desc, "END GAME") == TRUE) %>%
select(game_id, home_team, away_team, home_score, away_score)
new_pbp <- pbp %>%
select(game_id, home_team, away_team, posteam, wp, posteam_score, game_seconds_remaining) %>%
left_join(game_results, .) %>%
mutate(
winning_team = if_else(home_team > away_team, 1, 0),
wp_held = if_else(posteam == winning_team, 1, 0),
wp_err = if_else(posteam == winning_team, 1 - wp, wp)
) %>%
filter(!is.na(wp))
new_pbp
new_pbp %>%
filter(!is.na(wp_held)) %>%
ggplot(aes(x = game_seconds_remaining, y = wp, z = wp_held)) +
stat_summary_hex(bins = 120,
color = "grey",
fun = mean) +
scale_x_reverse() +
theme_bw() +
labs(title = "Observed probability that result indicated by WP model holds till end of regulation",
subtitle = "Teams with a model-implied lead are, in fact, quite likely to win, and vice-versa, no matter how much time is left on the clock",
caption = "CC-BY-SA @GrumpyNFLStats - data by @nflFastR"
)
new_pbp %>%
filter(!is.na(wp_held)) %>%
ggplot(aes(x = game_seconds_remaining, y = wp, z = wp_held)) +
stat_summary_hex(bins = 120,
color = "grey",
fun = mean) +
scale_x_reverse() +
theme_bw() +
labs(title = "Observed probability that result indicated by WP model holds till end of regulation",
subtitle = "Teams with a model-implied lead are, in fact, quite likely to win, and vice-versa,\n no matter how much time is left on the clock",
caption = "data: nflfastR"
)
new_pbp %>%
filter(!is.na(wp_held)) %>%
ggplot(aes(x = game_seconds_remaining, y = wp, z = wp_held)) +
stat_summary_hex(bins = 120,
color = "grey",
fun = mean) +
scale_x_reverse() +
theme_bw() +
labs(title = "Observed probability that result indicated by WP model holds till end of regulation",
subtitle = "Teams with a model-implied lead are, in fact, quite likely to win,\n and vice-versa, no matter how much time is left on the clock",
caption = "data: nflfastR"
)
?stat_summary_hex
esquisse:::esquisser()
new_pbp %>% ggplot() + geom_histogram(aes(x = wp_held))
new_pbp %>%
filter(!is.na(wp_held))
new_pbp %>%
filter(!is.na(wp_held)) %>% ggplot(aes(x = wp_held)) %>% geom_histogram()
new_pbp %>%
filter(!is.na(wp_held)) %>% ggplot(aes(x = wp_held)) + geom_histogram()
new_pbp %>%
ggplot(aes(
x = game_seconds_remaining,
y = wp,
z = wp_err)) +
stat_summary_hex(bins = 120,
color = "grey",
fun = mean) +
scale_x_reverse() +
theme_bw() +
labs(
title = "Observed probability that result indicated by WP model does not hold till end-of-regulation",
subtitle = "If the estimated win probability is between 0.33 and 0.66, the game could very well turn",
caption = "data: nflfastR"
)
new_pbp %>%
ggplot(aes(x = game_seconds_remaining, y = wp)) +
geom_hex(aes(fill = stat(sqrt(count))), bins = 120) +
viridis::scale_fill_viridis() + scale_x_reverse() +
theme_bw() +
labs(title = "Density of WP estimates by time remaining in the game",
subtitle = "WP estimates are quite evenly distributed - no bias evident",
caption = "CC-BY-SA @GrumpyNFLStats - data by @nflFastR"
)
new_pbp %>%
ggplot(aes(x = game_seconds_remaining, y = wp, z = wp_err)) +
stat_summary_hex(bins = 120,
color = "grey",
fun = sd) +
scale_x_reverse() +
theme_bw() +
labs(title = "Observed probability that result indicated by WP model does not hold till end-of-regulation",
subtitle = "If the estimated win probability is between 0.33 and 0.66, the game could very well turn",
caption = "CC-BY-SA @GrumpyNFLStats - data by @nflFastR"
)
new_pbp %>%
filter(!is.na(wp_held)) %>%
ggplot(aes(
x = game_seconds_remaining,
y = wp,
z = wp_held)
) +
stat_summary_hex(
bins = 120, color = "grey", fun = mean
) +
scale_x_reverse() +
theme_bw() +
labs(
title = "Observed probability that result indicated by WP model holds till end of regulation",
subtitle = "Teams with a model-implied lead are, in fact, quite likely to win,\n and vice-versa, no matter how much time is left on the clock",
caption = "data: nflfastR"
)
post16 <- filter(
pbp,
season_type == "REG" &
!is.na(epa) &
play_type %in% c("pass", "run") &
down %in% c(1, 2, 3, 4)
) %>%
dplyr::select(season, week, posteam, defteam, epa, play_id, qtr, quarter_seconds_remaining) %>%
mutate(
def_id = as.numeric(factor(str_c(defteam, "-", season))),
off_id = as.numeric(factor(str_c(posteam, "-", season)))
)
post16
epa_off_actual <- post16 %>%
group_by(posteam, season, off_id) %>%
summarise(
offensive_epa = mean(epa),
n_offense = n()
)
epa_def_actual <- post16 %>%
group_by(defteam, season, def_id) %>%
summarise(defensive_epa = mean(epa))
epa_off_actual
epa_actual <- epa_off_actual %>%
inner_join(epa_def_actual, by = c("posteam" = "defteam", "season", "off_id" = "def_id"))
epa_actual
load_ngs <- function(
stat_type = c("passing", "receiving", "rushing"), year = c(2021),
weekly = TRUE, regular_season = TRUE, join_roster = FALSE, pbp_data = pbp_data
){
stat_type <- rlang::arg_match0(stat_type, c("passing", "receiving", "rushing"))
ngs <- read_rds(glue::glue("~/Documents/nfl/data/ngs/ngs_{stat_type}.rds"))
if (isTRUE(weekly)) {
ngs <- dplyr::filter(ngs, .data$week >= 1, .data$season == year)
}
if (isFALSE(weekly)) {
ngs <- dplyr::filter(ngs, .data$week == 0, .data$season == year)
}
# if true, drop postseason games
if (isTRUE(regular_season)) {
ngs <- dplyr::filter(ngs, .data$season_type == 'REG')
}
# if true, join the ngs data to pbp
if (isTRUE(join_roster)) {
ngs <- pbp_data %>%
dplyr::left_join(ngs, by = c("jersey_number" = "player_jersey_number", "posteam" = "team_abbr", "season", "name" = "player_short_name"))
}
return(ngs)
}
ngs <- load_ngs(stat_type = "rushing", join_roster = TRUE, pbp_data = pbp)
ngs
joined <- load_ngs(stat_type = "rushing", join_roster = TRUE, pbp_data = pbp) %>%
mutate(
ten_zone_rush = if_else(yardline_100 <= 10 & rush_attempt == 1, 1, 0),
ten_zone_pass = if_else(yardline_100 <= 10 & pass_attempt == 1 & sack == 0, 1, 0),
ten_zone_rec = if_else(yardline_100 <= 10 & complete_pass == 1, 1, 0),
field_touch = case_when(
yardline_100 <= 100 & yardline_100 >= 81 & (rush_attempt == 1 | complete_pass == 1) ~ "touch_100_81",
yardline_100 <= 80 & yardline_100 >= 61 & (rush_attempt == 1 | complete_pass == 1) ~ "touch_80_61",
yardline_100 <= 60 & yardline_100 >= 41 & (rush_attempt == 1 | complete_pass == 1) ~ "touch_60_41",
yardline_100 <= 40 & yardline_100 >= 21 & (rush_attempt == 1 | complete_pass == 1) ~ "touch_40_21",
yardline_100 <= 20 & yardline_100 >= 0 & (rush_attempt == 1 | complete_pass == 1) ~ "touch_20_1",
TRUE ~ "other"
)
)
rb_touches <- joined %>%
filter(
player_position == "RB",
!field_touch == "other"
) %>%
group_by(
name,
rusher_player_id,
field_touch
) %>%
summarise(touches = n()) %>%
group_by(name, rusher_player_id) %>%
mutate(
total_touches = sum(touches),
pct_touches = touches / total_touches
) %>%
filter(total_touches >= 100)
